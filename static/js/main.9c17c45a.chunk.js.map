{"version":3,"sources":["Components/Firebase.js","Components/List.js","Components/Form.js","Components/Header.js","Components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","List","useState","todosList","setTodosList","useEffect","auth","currentUser","userid","uid","collection","doc","onSnapshot","querySnapshot","docs","map","id","todo","data","progress","time","date","getTodos","className","Card","ListItem","ListItemText","primary","secondary","Button","onClick","update","upDatestatus","delete","deleteTodo","Form","props","state","selectedDate","Date","whatToDo","rows","HandleDateChange","bind","HandlewhatToDoChange","handleSubmit","event","this","setState","e","target","value","preventDefault","add","timestamp","FieldValue","serverTimestamp","toLocaleDateString","toLocaleTimeString","catch","err","console","log","onSubmit","TextField","label","variant","onChange","utils","DateFnsUtils","lable","format","KeyboardButtonProps","type","color","size","Component","header","signOut","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","useStyles","makeStyles","root","minWidth","maxHeight","marginTop","marginBottom","Login","isLogedIn","setIsLogedIn","classes","onAuthStateChanged","user","firebaseAuth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c17c45a.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDbzJdNUVi7RB0kP9g2Aqtyb_BE5MfcECg\",\r\n    authDomain: \"mytodosapp-a180b.firebaseapp.com\",\r\n    projectId: \"mytodosapp-a180b\",\r\n    storageBucket: \"mytodosapp-a180b.appspot.com\",\r\n    messagingSenderId: \"315347951592\",\r\n    appId: \"1:315347951592:web:5ca86198577918248c4e5d\"\r\n  };\r\n\r\n  const fire = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  \r\n  export default fire;\r\n  export {db};","import { Button,\r\n         ListItem,\r\n         ListItemText,\r\n         Card}    from '@material-ui/core'\r\nimport { AccessAlarm, \r\n         ThreeDRotation } from '@material-ui/icons';\r\nimport   React            from 'react'\r\nimport                         './List.css';\r\nimport { db}              from './Firebase';\r\nimport   firebase         from 'firebase';\r\nimport { useState, \r\n         useEffect}       from 'react';\r\nimport DeleteIcon         from '@material-ui/icons/Delete';\r\n\r\nfunction List() {\r\n\r\n    const [todosList, setTodosList] = useState([]);\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, [])\r\n\r\n    function getTodos() {\r\n        if (firebase.auth().currentUser !== null){\r\n\r\n            const userid = firebase.auth().currentUser.uid\r\n\r\n            db.collection(\"users\").doc(userid)\r\n            .collection(\"todos\").onSnapshot(function (querySnapshot){\r\n                setTodosList(\r\n                    querySnapshot.docs.map((doc) => ({\r\n                        id:       doc.id,\r\n                        todo:     doc.data().todo,\r\n                        progress: doc.data().progress,\r\n                        time:     doc.data().time,\r\n                        date:     doc.data().date,\r\n                    }))\r\n                )\r\n                \r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    function upDatestatus(todo){\r\n        if (firebase.auth().currentUser !== null){\r\n            const userid = firebase.auth().currentUser.uid\r\n            db.collection(\"users\").doc(userid)\r\n            .collection('todos').doc(todo.id).update({\r\n                progress: !todo.progress,\r\n            })\r\n        }\r\n    }\r\n\r\n    function deleteTodo(todo) {\r\n        if (firebase.auth().currentUser !== null){\r\n            const userid = firebase.auth().currentUser.uid\r\n            db.collection(\"users\").doc(userid)\r\n            .collection(\"todos\").doc(todo.id).delete();\r\n    }\r\n    } \r\n\r\n    return (\r\n        <div >\r\n            <div className=\"todoList\">\r\n                <Card>\r\n                    {\r\n                        todosList.map((todo)=> (\r\n                         <ListItem>\r\n                            <ListItemText primary= {todo.todo} \r\n                            secondary={todo.progress? 'Inprogress':'Completed'}/>\r\n                            <ListItemText primary= {todo.date} secondary={todo.time}/>\r\n                            <Button onClick={() => upDatestatus(todo)}>{todo.progress? 'Done':  'Undone'}</Button>\r\n                            <DeleteIcon onClick={()=> deleteTodo(todo)} />\r\n                        </ListItem>\r\n                        \r\n                        ))\r\n                    }\r\n                </Card>\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React, {Component}  from 'react'\r\nimport 'date-fns';\r\nimport { makeStyles }        from '@material-ui/core/styles';\r\nimport TextField             from '@material-ui/core/TextField';\r\nimport DateFnsUtils          from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,}     from '@material-ui/pickers';\r\nimport { Button }            from '@material-ui/core';\r\nimport './Form.css';\r\nimport List                  from './List';\r\nimport {db}                  from './Firebase';\r\nimport firebase              from 'firebase';\r\n\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             selectedDate: new Date(),\r\n             whatToDo: '',\r\n             rows: []\r\n        }\r\n        this.HandleDateChange = this.HandleDateChange.bind(this)\r\n        this.HandlewhatToDoChange = this.HandlewhatToDoChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    HandleDateChange(event){\r\n        this.setState ({\r\n            selectedDate: event,\r\n        })\r\n    }\r\n\r\n    \r\n    HandlewhatToDoChange(e) {\r\n        this.setState({\r\n            whatToDo: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (firebase.auth().currentUser !== null){\r\n                const userid = firebase.auth().currentUser.uid;\r\n\r\n                const userRef = db.collection('users').doc(userid)\r\n                userRef.collection('todos').add({\r\n                    progress: true,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    todo: this.state.whatToDo,\r\n                    date: this.state.selectedDate.toLocaleDateString(),\r\n                    time: this.state.selectedDate.toLocaleTimeString(),\r\n                }).catch((err) =>{\r\n                    console.log(err);\r\n                })\r\n\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n            <form className=\"form_container\"\r\n            onSubmit={this.handleSubmit}>\r\n                <div className=\"whatToDo\">\r\n                    <TextField  \r\n                    label=\"What to do\" \r\n                    variant=\"filled\" \r\n                    value={this.whatToDo}\r\n                    onChange={this.HandlewhatToDoChange}\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"WhenToDo\">\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            id=\"Date-selector\"\r\n                            lable=\"Date\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            value={this.state.selectedDate}\r\n                            onChange={this.HandleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <div className=\"time_selector\">\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardTimePicker\r\n                            id=\"Time-selector\"\r\n                            lable=\"Time\"\r\n                            value={this.state.selectedDate}\r\n                            onChange={this.HandleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change time',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Button type=\"submit\" \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    size=\"small\"\r\n                    >Add</Button>\r\n                </div>\r\n            </form>\r\n            \r\n            <List /> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react'\r\nimport './Header.css';\r\nimport firebase from 'firebase';\r\n\r\nfunction header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"logoutbutton\">\r\n                <button  \r\n                onClick={() => firebase.auth().signOut()}>Logout\r\n                </button>\r\n            </div>\r\n            <h1 className=\"header_title\">My ToDo's</h1>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default header\r\n","import React, {useState, useEffect} from 'react';\r\nimport StyledfirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\nimport { Card, makeStyles } from '@material-ui/core';\r\nimport Form from './Form';\r\nimport Header from './Header';\r\nimport './Login.css';\r\nimport { db } from './Firebase';\r\nimport { CenterFocusStrong, FullscreenExit } from '@material-ui/icons';\r\n\r\nconst uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => false,\r\n    },\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 400,\r\n      maxHeight: 1000,\r\n      marginTop: 100,\r\n      marginBottom: 150\r\n    }\r\n  });\r\n\r\nfunction Login() {\r\n    const [isLogedIn, setIsLogedIn] = useState(false);\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user)=>{  \r\n            setIsLogedIn(!!user);\r\n            \r\n        })\r\n    }, []) \r\n\r\n    return (\r\n        <div className='login'>\r\n            { isLogedIn ?  (\r\n                <div className=\"header_form\">\r\n                    <Header  /> \r\n                    <Form  />\r\n                </div>\r\n                ) : \r\n                (<Card className={classes.root}>\r\n                    <h2 className=\"signInTitle\">Sign In</h2>\r\n                    <div className=\"signInButton\">\r\n                        <StyledfirebaseAuth uiConfig={uiConfig}\r\n                        firebaseAuth={firebase.auth()} />\r\n                    </div>\r\n                </Card>)\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import './App.css';\nimport Login from './Components/Login';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login/>          \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}